{"version":3,"file":"static/js/673.f07b9038.chunk.js","mappings":"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","sources":["common-styles/GlobalStyles.js","components/UserCard/UserCard.styled.jsx","utils/api.js","components/UserCard/UserCard.jsx","components/CardsGallery/CardsGallery.styled.jsx","components/CardsGallery/CardsGallery.jsx","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/LoadMoreBtn/LoadMoreBtn.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/Tweets.jsx"],"sourcesContent":["import { Global } from '@emotion/react';\n\nconst GlobalStyles = () => (\n  <Global\n    styles={`\n      @import url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');\n\n      body {\n        font-family: 'Montserrat', sans-serif;\n      }\n    `}\n  />\n);\n\nexport default GlobalStyles;\n","import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  height: 460px;\n  border-radius: 20px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n`;\nexport const LogoImg = styled.img`\n  position: absolute;\n  left: 20px;\n  top: 20px;\n  width: 76px;\n  height: 22px;\n`;\nexport const BubleImg = styled.img`\n  width: 308px;\n  height: 168px;\n  margin-top: 28px;\n`;\nexport const AvatarCont = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 80px;\n  top: calc(50% - 40px);\n`;\nexport const AvatarImg = styled.img`\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n  z-index: 2;\n`;\nexport const AvatarLine = styled.img`\n  position: absolute;\n  top: 34px;\n  width: 380px;\n  height: 16px;\n`;\nexport const AvatarOutline = styled.img`\n  position: absolute;\n  width: 80px;\n  height: 80px;\n  z-index: 3;\n`;\nexport const TweetInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 88px;\n`;\nexport const UserInfo = styled.p`\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  color: #ebd8ff;\n  &:not(:first-of-type) {\n    margin-top: 16px;\n  }\n`;\nexport const FollowButton = styled.button`\n  width: 196px;\n  height: 50px;\n  padding: 14px 28px;\n  margin-top: 26px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  color: #373737;\n  border-radius: 10px;\n  background-color: ${props => props.backgroundColor};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n`;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://64579cdc0c15cb14820cace3.mockapi.io/users';\n\nexport async function getUsers(page) {\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL,\n      params: {\n        page: page,\n        limit: 3,\n      },\n    };\n    const res = await axios(config);\n    return res.data;\n  } catch (error) {\n    alert(`We are sorry, unable to get data. Error message:${error.message}`);\n  }\n}\n\nexport async function updateUserFollowers(id, newFollowers) {\n  try {\n    const config = {\n      method: 'PUT',\n      url: BASE_URL + `/${id}`,\n      data: { followers: newFollowers },\n    };\n    const res = await axios(config);\n    return res.data;\n  } catch (error) {}\n}\n","import { useEffect, useState } from 'react';\nimport Ellipse from '../../images/Ellipse1.png';\nimport Logo from '../../images/Logo.png';\nimport SpeachBuble from '../../images/picture2.png';\nimport Line from '../../images/Rectangle1.png';\nimport {\n  Card,\n  FollowButton,\n  LogoImg,\n  AvatarCont,\n  AvatarImg,\n  AvatarOutline,\n  AvatarLine,\n  BubleImg,\n  TweetInfo,\n  UserInfo,\n} from './UserCard.styled';\nimport { updateUserFollowers } from 'utils/api';\n\nexport const UserCard = ({ id, tweets, followers, avatar }) => {\n  const [following, setFollowing] = useState(false);\n  const [cardFollowers, setCardFollowers] = useState(followers);\n\n  useEffect(() => {\n    const localFollowing = localStorage.getItem(`card${id}`);\n    if (localFollowing) {\n      setFollowing(JSON.parse(localFollowing));\n    }\n  }, [id]);\n\n  const handleClick = following => {\n    if (following) {\n      const newFollowers = cardFollowers - 1;\n      setCardFollowers(newFollowers);\n      updateUserFollowers(id, newFollowers).then(res => {\n        setCardFollowers(res.followers);\n      });\n    }\n    if (!following) {\n      const newFollowers = cardFollowers + 1;\n      setCardFollowers(newFollowers);\n      updateUserFollowers(id, newFollowers).then(res => {\n        setCardFollowers(res.followers);\n      });\n    }\n    setFollowing(!following);\n    localStorage.setItem(`card${id}`, JSON.stringify(!following));\n  };\n\n  return (\n    <Card>\n      <LogoImg src={Logo} alt=\"logo\" />\n      <BubleImg src={SpeachBuble} alt=\"speach-buble\" />\n      <AvatarCont>\n        <AvatarImg src={avatar} alt=\"avatar\" />\n        <AvatarLine src={Line} alt=\"line\" />\n        <AvatarOutline src={Ellipse} alt=\"ellipse\" />\n      </AvatarCont>\n      <TweetInfo>\n        <UserInfo>{tweets} TWEETS</UserInfo>\n        <UserInfo>{cardFollowers.toLocaleString('en-US')} FOLLOWERS</UserInfo>\n        <FollowButton\n          backgroundColor={following ? '#5CD3A8' : '#EBD8FF'}\n          type=\"button\"\n          onClick={() => {\n            handleClick(following);\n          }}\n        >\n          {following ? 'FOLLOWING' : 'FOLLOW'}\n        </FollowButton>\n      </TweetInfo>\n    </Card>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n`;\n","import { UserCard } from 'components/UserCard/UserCard';\nimport { Gallery } from './CardsGallery.styled';\n\nexport const CardsGallery = ({ results }) => {\n  return (\n    <Gallery>\n      {results.map(({ id, tweets, followers, avatar }) => {\n        return (\n          <UserCard\n            key={id}\n            id={id}\n            tweets={tweets}\n            followers={followers}\n            avatar={avatar}\n          ></UserCard>\n        );\n      })}\n    </Gallery>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LoadBtn = styled.button`\n  width: 196px;\n  height: 50px;\n  margin-top: 20px;\n  padding: 14px 28px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  color: #373737;\n  border-radius: 10px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  background-color: #5cd3a8;\n`;\n","import { LoadBtn } from './LoadMoreBtn.styled';\n\nexport const LoadMoreBtn = ({ onClick }) => {\n  return <LoadBtn onClick={onClick}>Load more</LoadBtn>;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GoBack = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 50px;\n  margin: 20px auto;\n  text-decoration: none;\n  /* text-align: center; */\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  color: #373737;\n  border-radius: 10px;\n  background-color: #ebd8ff;\n`;\n","import { GoBack } from './BackLink.styled';\n\nexport const BackLink = ({ to }) => {\n  return <GoBack to={to}>Back</GoBack>;\n};\n","import GlobalStyles from 'common-styles/GlobalStyles';\nimport { CardsGallery } from '../components/CardsGallery/CardsGallery';\nimport { useEffect, useState } from 'react';\nimport { getUsers } from 'utils/api';\nimport { LoadMoreBtn } from 'components/LoadMoreBtn/LoadMoreBtn';\nimport { BackLink } from 'components/BackLink/BackLink';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Tweets = () => {\n  const [results, setResults] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    getUsers(page).then(result => {\n      if (page === 1) {\n        setResults(result);\n        setStatus(Status.RESOLVED);\n        return;\n      }\n      if (result.length === 0) {\n        setStatus(Status.REJECTED);\n        alert(\"We're sorry, but you've reached the end of search results.\");\n        return;\n      }\n      setResults(prevResults => [...prevResults, ...result]);\n      setStatus(Status.RESOLVED);\n    });\n  }, [page]);\n\n  const resolved = status === 'resolved';\n\n  return (\n    <>\n      <GlobalStyles />\n      <BackLink to=\"/\"></BackLink>\n      <CardsGallery results={results}></CardsGallery>\n      {resolved && (\n        <LoadMoreBtn type=\"button\" onClick={onLoadMore}></LoadMoreBtn>\n      )}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["styles","Card","styled","LogoImg","BubleImg","AvatarCont","AvatarImg","AvatarLine","AvatarOutline","TweetInfo","UserInfo","FollowButton","props","backgroundColor","BASE_URL","page","config","method","url","params","limit","axios","res","data","alert","message","updateUserFollowers","id","newFollowers","followers","UserCard","tweets","avatar","useState","following","setFollowing","cardFollowers","setCardFollowers","useEffect","localFollowing","localStorage","getItem","JSON","parse","src","alt","SpeachBuble","toLocaleString","type","onClick","then","setItem","stringify","handleClick","Gallery","CardsGallery","results","map","LoadBtn","LoadMoreBtn","GoBack","Link","BackLink","to","Status","setResults","setPage","status","setStatus","getUsers","result","length","prevResults","resolved","prevPage"],"sourceRoot":""}